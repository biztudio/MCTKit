<template>

<view>
TYU


</view>    

<view class="section">
  <button type="primary" size="{{primarySize}}" loading="{{loading}}" plain="{{plain}}" lang="zh_CN"
        disabled="{{disabled_btnstart}}" bindtap="addnewpractise" hover-class="other-button-hover">{{btnname_start}}</button>

   <button type="warn" size="{{warnSize}}" loading="{{loading}}" plain="{{plain}}" lang="zh_CN"
        disabled="{{disabled_btncomplete}}" bindtap="completepractise">{{btnname_complete}}</button>      
</view>

<wxc-toast
    is-show="{{$toast.show}}"
    text="{{score_message}}"
    ></wxc-toast>
</template>
<script>
import mathkit from '../lib/mathkit.js'

export default {

 config: {
        usingComponents: {
            'wxc-toast':'@minui/wxc-toast'
        }
    },
        
 data:{
     $toast: { show: false },
     cell_value_list:[],
     score_second:0,
     score_message:'',
     btnname_start:'开练',
     btnname_complete:'完成',
     disabled_btnstart:false,
     disabled_btncomplete:false,
     max_time_seconds:600,
     timerid:0
 },   

 methods:{
    resetstartbutton:function(){
        clearInterval(this.data.timerid) 
        this.setData({score_second:0})
        this.setData({disabled_btnstart:false})
        this.setData({btnname_start:'开练'})
    },

    showtoastinfo:function(message, show_seconds){
        this.setData({score_message:message}) 
        this.setData({ $toast: { show: true } })
        setTimeout(() => { this.setData({ $toast: { show: false }}) }, show_seconds)
    },

    addnewpractise:function(event){
         let x_axis_length = 5
         let y_axis_length = 5
         let value_list = []
         let digit_pool = []
         for(let i = 1; i <= x_axis_length * y_axis_length; i++){ digit_pool.push(i); }
         let temp_pool = digit_pool.slice(0)
         for(let i = 0; i < digit_pool.length; i++){
                        let index = mathkit.get_random_number_index(temp_pool.length);
                        let number = temp_pool[index];
                        value_list.push(number);
                        temp_pool.splice(index, 1);
         }
    
         this.setData({score_second:0})
         this.setData({disabled_btnstart:true})          
         this.setData({timerid:setInterval(()=>{
             let currentsecond = this.data.score_second + 1
             this.setData({score_second:currentsecond})
             this.setData({btnname_start:'训练计时中: ' + currentsecond + ' 秒'})
              
             if(currentsecond > this.data.max_time_seconds){
                  this.resetstartbutton()
                  let message = '用时过长!\n请认真重新再来一次，谢谢.'
                  this.showtoastinfo(message, 5000)
             }
         }, 1000)})
    },

    completepractise:function(event){
       let message = ''
       
       if(this.data.score_second > 0){
            message = '恭喜完成，用时 ' + (this.data.score_second) + ' 秒'
            this.resetstartbutton()
            this.showtoastinfo(message, 3000)
            return
       }
       this.resetstartbutton()
    }
  }
}
</script>

<style>

</style>
